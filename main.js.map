{"version":3,"sources":["./src/app/route.module.ts","./src/environments/environment.ts","./src/app/customDirective/highlight/highlight.directive.ts","./src/app/formExample/form/form.component.ts","./src/app/formExample/form/form.component.html","./src/app/services/logger/logger.service.ts","./src/app/product/product.component.html","./src/app/product/product.component.ts","./src/app/product/product-details/product-details.component.ts","./src/app/product/product-details/product-details.component.html","./src/app/customer/customer.component.html","./src/app/customer/customer.component.ts","./src/app/blog/blog/blog.component.html","./src/app/blog/blog/blog.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/util/const.constant.ts","./src/app/services/blog/blog.service.ts","./src/app/customPipe/product-name-custom.pipe.ts","./src/app/services/dataService/data-service.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ProductComponent } from './product/product.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { BlogComponent } from './blog/blog/blog.component';\nimport { FormComponent } from './formExample/form/form.component';\n\nconst routesConfig: Routes = [\n  {path: 'product', component: ProductComponent},\n  {path: 'customer', component: CustomerComponent},\n  {path: 'blog', component: BlogComponent},\n  {path: 'form', component: FormComponent},\n  {path: '',   redirectTo: '/blog', pathMatch: 'full' }, \n  { path: '**',  redirectTo: '/customer', pathMatch: 'full'}\n]\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routesConfig)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class RouteModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Directive,  ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlight]'\n})\nexport class HighlightDirective {\n\n  constructor(private el:  ElementRef) {\n    console.log(el)\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.el.nativeElement.style.backgroundColor = 'lightblue';\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.el.nativeElement.style.backgroundColor = null;\n  }\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n  studentForm: FormGroup;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.studentForm = this.fb.group({\n      name: ['', Validators.required],\n      emailId: ['', Validators.compose([Validators.required, Validators.email])],\n      phoneNo: ['', Validators.compose([Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.minLength(10), Validators.maxLength(10)])],\n      address: ['', Validators.required],\n      active: ['']\n\n    });\n     \n\n  }\n\n  createStudent() {\n    console.log(this.studentForm.controls.name.value);\n  }\n  \n}\n","\n\n<div class=\"jumbotron\">\n<div class=\"container\">\n    <div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n    <h1>Student Register form</h1>\n  <form [formGroup]=\"studentForm\" (ngSubmit)=\"createStudent()\">\n    <div>\n        <table>\n            <tr>\n                <td>\n            </table>\n        <label for=\"\">Name\n            <input type=\"text\" formControlName=\"name\">\n        </label>\n        <span *ngIf=\"studentForm.controls.name.invalid\">Name Required</span>\n    </div>\n    <div>\n        <label for=\"\">Email ID\n            <input type=\"text\" formControlName=\"emailId\">\n        </label>\n        <span *ngIf=\"studentForm.controls.emailId.invalid\">Email ID Required</span>\n    </div>\n    <div>\n        <label for=\"\">Phone No\n            <input type=\"text\" formControlName=\"phoneNo\">\n        </label>\n        <span *ngIf=\"studentForm.controls.phoneNo.invalid\">Phone No Required</span>\n    </div>\n    <div>\n        <label for=\"\">Address\n            <input type=\"text\" formControlName=\"address\">\n        </label>\n        <span *ngIf=\"studentForm.controls.address.invalid\">Address Required</span>\n    </div>\n    <div>\n        <label for=\"\">Active\n            <input type=\"checkbox\" formControlName=\"active\">\n        </label>\n    </div>\n    <button type=\"submit\" [disabled]=\"!studentForm.valid\">Submit</button>\n</form>\n\n\n\n\n    ","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggerService {\n\n  constructor() { }\n\n  log(value: any, msg: string) {\n    console.log(value);\n    alert(msg + ' added');\n  }\n\n  alert(msg){\n    alert(msg);\n  }\n}\n","\n<strong>Current Date and Time : </strong>{{currentDateTime | date:'medium'}}\n<div class=\"container\">\n<div class=\"jumbotron\">\n    <div class=\"panel panel-primary\">\n    <h1>Product Entry</h1>\n    <label for=\"\">Product Id\n        <input type=\"text\" [(ngModel)]=\"productId\" disabled>\n    </label>\n    <br>\n  <label for=\"\">Product Name\n        <input type=\"text\" [(ngModel)]=\"productName\">\n    </label>\n    <br>\n    <label for=\"\">Product Price\n        <input type=\"text\" [(ngModel)]=\"productPrice\">\n    </label>\n    <br>\n    <label for=\"\">Product avilablity\n        <input type=\"checkbox\" [(ngModel)]=\"avilablity\">\n    </label>\n    <br>\n    <button class=\"btn btn-primary\" (click)=\"save()\" *ngIf=\"isSave\">Save</button>\n    <button class=\"btn btn-primary\"(click)=\"update()\" *ngIf=\"isUpdate\">Update</button>\n<div class=\"jumbotron\"*ngIf=\"productsList.length !== 0\">\n    <app-product-details [productListDetails]=\"productsList\" (now)=\"setCurrentDateTime($event)\"></app-product-details>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LoggerService } from './../services/logger/logger.service';\nimport { DataServiceService } from './../services/dataService/data-service.service';\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n \n  productsList: Array<object> = [];\n\n  productId: number;\n  productName: String;\n  productPrice: number;\n  avilablity: boolean = false;\n  isSave: boolean = true;\n  isUpdate: boolean = false;\n\n  currentDateTime: Date;\n\n  constructor(private logger: LoggerService, private data: DataServiceService){\n  }\n\n  ngOnInit() {\n    this.productId = this.productsList.length + 1;\n    this.productsList.push({\n      productId: 1,\n      productName: 'Moto Phone',\n      productPrice: 10000,\n      productAviablity: true\n    })\n    this.data.setData(new Date());\n  }\n\n  save() {\n    this.productsList.push({\n      productId: this.productId,\n      productName: this.productName,\n      productPrice: this.productPrice,\n      productAviablity: this.avilablity\n    })\n    this.productId = this.productId + 1;\n    this.logger.log(this.productsList, 'Product');\n    this.logger.alert('Product Added : message from alert function')\n    this.clear();\n  }\n\n  clear(){\n    this.productName = null;\n    this.productPrice = null;\n    this.avilablity = false;\n  }\n\n  deleteProduct(index) {\n    this.productsList.splice(index,1)\n  }\n\n  editProduct(index) {\n    this.productId = this.productsList[index]['productId']\n    this.productName = this.productsList[index]['productName']\n    this.productPrice  = this.productsList[index]['productPrice']\n    this.avilablity = this.productsList[index]['productAviablity']\n    this.isSave = false;\n    this.isUpdate = true;\n  }\n\n  update() {\n\n  }\n\n  setCurrentDateTime(value){\n    this.currentDateTime = value;\n  }\n\n}\n","import { Component, Input, OnInit,  Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n\n  @Input() productListDetails: Array<Object>;\n  @Output() now = new EventEmitter<Date>();\n  currentDateTime: Date;\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(this.productListDetails);\n    this.currentDateTime = new Date();\n    this.now.emit(this.currentDateTime);\n  }\n}\n","<h1>Product list</h1>\n\n<table>\n    <tr>\n        <th>Product Id</th>\n        <th>Product Name</th>\n        <th>Product Price</th>\n        <th>Product Avilablity</th>\n        <th>Action</th>\n    </tr>\n    <tr *ngFor=\"let product of productListDetails; let i = index\">\n        <td appHighlight>{{product.productId}} <span>CNO <span>inside span</span></span></td>\n        <td appHighlight>{{product.productName | productNameCustom:\"This Product \":\" and the price is \" }}</td>\n        <td appHighlight [ngStyle]=\"{'background-color': product.productPrice > 10 ? 'red' : 'green'}\">{{product.productPrice | currency:'INR' }}</td>\n        <td appHighlight [ngClass]=\"product.productAviablity === true ? 'highlightGreen' : 'highlightRed'\">{{product.productAviablity}}</td>\n        <td>\n            <button (click)=\"deleteProduct(i)\">Delete</button>\n            <button (click)=\"editProduct(i)\">Edit</button>\n        </td>\n    </tr>\n</table>","  \n  <span>Data From other Component {{datafromOtherCompo}}</span>\n<br>\n<span><strong>Current Date and Time : </strong>{{now | date:'medium'}}</span>\n<div class=\"container\">\n<div class=\"jumbotron\">\n    <div class=\"panel panel-primary\">\n    <h1>Customer Entry</h1>\n    <label for=\"\">Customer Id\n        <input type=\"text\" size=\"30\" [(ngModel)]=\"customerId\" disabled>\n    </label>\n    <br>\n    <label for=\"\">Customer Name\n        <input type=\"text\" size=\"30\" [(ngModel)]=\"customerName\">\n    </label>\n    <br>\n    <label for=\"\">Customer Phone No\n        <input type=\"text\" size=\"30\" [(ngModel)]=\"customerPhoneNo\">\n    </label>\n    <br>\n    <label for=\"\">Customer address\n        <input type=\"text\" size=\"30\" [(ngModel)]=\"customerAddress\">\n    </label>\n    <br>\n    <button class=\"btn btn-primary\"(click)=\"save()\" *ngIf=\"isSave\">Save</button>\n    <button class=\"btn btn-primary\" (click)=\"update()\" *ngIf=\"isUpdate\">Update</button>\n</div>\n<div class=\"jumbotron\" *ngIf=\"customersList.length !== 0\">\n    <h1>Customer list</h1>\n\n    <table>\n        <tr>\n            <th>Customer Id</th>\n            <th>Customer Name</th>\n            <th>Customer Phone No</th>\n            <th>Customer Address</th>\n            <th>Action</th>\n        </tr>\n        <tr *ngFor=\"let customer of customersList; let i = index\">\n            <td>{{customer.customerId}}</td>\n            <td>{{customer.customerName}}</td>\n            <td>{{customer.customerPhoneNo}}</td>\n            <td>{{customer.customerAddress}}</td>\n            <td>\n                <button class=\"btn btn-primary\"(click)=\"deleteCustomer(i)\">Delete</button>\n                <button class=\"btn btn-primary\"(click)=\"editCustomer(i)\">Edit</button>\n            </td>\n        </tr>\n    </table>\n</div>\n\n\n","import { Component, OnInit, OnChanges, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked, OnDestroy} from '@angular/core';\nimport { DataServiceService } from './../services/dataService/data-service.service';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\n\nexport class CustomerComponent implements OnInit, OnChanges, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked, OnDestroy {\n\n  \n  customersList: Array<object> = [];\n\n  customerId: number;\n  customerName: String;\n  customerPhoneNo: number;\n  customerAddress: string;\n  isSave: boolean = true;\n  isUpdate: boolean = false;\n\n  now: Date = new Date();\n  datafromOtherCompo: any;\n\n  constructor(private data: DataServiceService){\n    console.log('From Constructor')\n  }\n\n  ngOnInit() {\n    \n    console.log('From ngOnmInit');\n    this.customerId = this.customersList.length + 1;\n    this.customersList.push({\n      customerId: 1,\n      customerName: 'Raju',\n      customerPhoneNo: 9876543210,\n      customerAddress: 'Salem'\n    })\n    this.datafromOtherCompo = this.data.getData();\n  }\n\n  save() {\n    this.customersList.push({\n      customerId: this.customerId,\n      customerName: this.customerName,\n      customerPhoneNo: this.customerPhoneNo,\n      customerAddress: this.customerAddress\n    })\n    this.customerId = this.customerId + 1;\n    this.clear();\n  }\n\n  clear(){\n    this.customerName = null;\n    this.customerPhoneNo = null;\n    this.customerAddress = null;\n  }\n\n  deleteCustomer(index) {\n    this.customersList.splice(index,1)\n  }\n\n  editCustomer(index) {\n    this.customerId = this.customersList[index]['customerId']\n    this.customerName = this.customersList[index]['customerName']\n    this.customerPhoneNo  = this.customersList[index]['customerPhoneNo']\n    this.customerAddress = this.customersList[index]['customerAddress']\n    this.isSave = false;\n    this.isUpdate = true;\n  }\n\n  update() {\n\n  }\n\n\n  ngOnChanges() {\n    console.log('From ngOnChanges')\n  }\t\n  ngDoCheck() {\n    console.log('From ngDoCheck')\n  }\t\n  ngAfterContentInit() {\n    console.log('From ngAfterContentInit')\n  }\t\n  ngAfterContentChecked() {\n    console.log('From ngAfterContentChecked')\n  }\t\n  ngAfterViewInit() {\n    console.log('From ngAfterViewInit')\n  }\t\n  ngAfterViewChecked() {\n    console.log('From ngAfterViewChecked')\n  }\t\n  ngOnDestroy() {\n    console.log('From ngOnDestroy')\n  }\n  \n}\n","\n<title><h1>Blog</h1></title>\n<div class=\"container\">\n    <div class=\"jumbotron\">\n             <h1>Blog</h1>\n        <h1>Create Post</h1>\n<label for=\"\">User Id</label>\n<input type=\"text\" [(ngModel)]=\"userId\">\n<br>\n<label for=\"\">Title</label>\n<input type=\"text\" [(ngModel)]=\"title\">\n<br>\n<label for=\"\">Body Content</label>\n<textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" [(ngModel)]=\"body\"></textarea>\n<br>\n<button class=\"btn btn-primary\"(click)=\"createPost()\" *ngIf=\"isCreate\">Create</button>\n<button class=\"btn btn-primary\"(click)=\"updatePost()\" *ngIf=\"!isCreate\">Update</button>\n\n\n<h1>Blog Posts</h1>\n\n<ul>\n    <li *ngFor=\"let post of postsList\">\n        <h3 (click)=\"edit(post.id)\">{{post.title}}</h3>\n        <p>{{post.body}}</p>\n        <button class=\"btn btn-primary\"(click)=\"deletePost(post.id)\">Delete</button>\n        <hr>\n    </li>\n</ul>\n","import { Component, OnInit } from '@angular/core';\nimport { BlogService } from './../../services/blog/blog.service';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.css']\n})\nexport class BlogComponent implements OnInit {\n  userId: Number;\n  title: String;\n  body: String;\n  id: Number;\n  postsList: any;\n  isCreate: boolean = true;\n\n  constructor(private blogService: BlogService) { }\n\n  ngOnInit(): void {\n    this.blogService.getAllPosts()\n    .subscribe((data) => {\n      this.postsList = data;\n    }, (error) => {\n      alert(error.status);\n    })\n  }\n\n  createPost(){\n    let body = {\n      title: this.title,\n      body: this.body,\n      userId: this.userId\n    }\n    this.blogService.createPost(body)\n    .subscribe((data) => {\n      alert('Created')\n      this.clear();\n    }, (error) => {\n      alert(error.status);\n    })\n  }\n\n  edit(id){\n    console.log(id)\n    this.isCreate = false;\n    this.blogService.getOnePost(id)\n    .subscribe((resp: any) => {\n      console.log(resp)\n      this.userId = resp.userId;\n      this.title = resp.title;\n      this.body = resp.body;\n      this.id = resp.id;\n    }, (error) => {\n      alert(error.status);\n    })\n  }\n\n  updatePost(){\n    this.isCreate = true;\n    let body = {\n      title: this.title,\n      body: this.body,\n      user: this.userId\n    }\n    this.blogService.updatePost(this.id, body)\n    .subscribe((resp) => {\n      alert('Updated')\n    }, (error) => {\n      alert(error.status);\n    })\n    this.clear();\n  }\n\n  clear() {\n    this.userId = null;\n    this.title = null;\n    this.body = null;\n  }\n\n  deletePost(id) {\n    this.blogService.deletePost(id)\n    .subscribe((resp) => {\n      alert('Deleted');\n    }, (error) => {\n      alert(error.status);\n    })\n  }\n  images = [944, 1011, 984].map((n) => `https://picsum.photos/id/${n}/900/500`);\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  ngOnInit() {}\n\n}\n","\n<div class=\"container\">\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\"></nav>\n    <ul>\n        <li>\n            <a routerLinkActive=\"active\" routerLink=\"/blog\">Blog</a>\n        </li>\n        <li>\n            <a routerLinkActive=\"active\" routerLink=\"/product\">Product</a>\n        </li>\n        <li>\n            <a routerLinkActive=\"active\" routerLink=\"/customer\">Customer</a>\n        </li>\n        <li>\n            <a routerLinkActive=\"active\" routerLink=\"/form\">Form</a>\n        </li>\n    </ul>\n</div>\n\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ProductNameCustomPipe } from './customPipe/product-name-custom.pipe';\nimport { HighlightDirective } from './customDirective/highlight/highlight.directive';\nimport { ProductComponent } from './product/product.component';\nimport { CustomerComponent } from './customer/customer.component';\nimport { RouteModule } from './route.module';\nimport { ProductDetailsComponent } from './product/product-details/product-details.component';\nimport { BlogComponent } from './blog/blog/blog.component';\nimport { FormComponent } from './formExample/form/form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductNameCustomPipe,\n    HighlightDirective,\n    ProductComponent,\n    CustomerComponent,\n    ProductDetailsComponent,\n    BlogComponent,\n    FormComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    RouteModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class ConstConstants {\r\n    public static API_URL = 'https://jsonplaceholder.typicode.com/posts/';\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ConstConstants } from './../../util/const.constant'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllPosts() {\n    return this.http.get(ConstConstants.API_URL);\n  }\n\n  getOnePost(id){\n    return this.http.get(ConstConstants.API_URL + id);\n  }\n\n  getComments(){\n\n  }\n\n  createPost(body){\n    return this.http.post(ConstConstants.API_URL, body)\n  }\n\n  updatePost(id, body){\n    return this.http.put(ConstConstants.API_URL + id, body)\n  }\n\n  deletePost(id){\n    return this.http.delete(ConstConstants.API_URL + id)\n  }\n\n  \n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'productNameCustom'\n})\nexport class ProductNameCustomPipe implements PipeTransform {\n\n  transform(value: unknown, ...args: unknown[]): unknown {\n    var arg1:any = args[0];\n    var arg2:any = args[1];\n    return arg1 + value + arg2;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n  someValue: any;\n  constructor() { }\n\n  setData(value){\n    this.someValue = value;\n  }\n\n  getData(){\n    return this.someValue;\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}